import { type LayoutChangeEvent, type ViewStyle } from 'react-native';
import { computeShadowProperties } from '../utils';
import type { ShadowProps, GradientLinearProps } from '../types';
interface UseShadowPropertiesParams extends ShadowProps {
    propWidth?: number;
    propHeight?: number;
    style?: ViewStyle;
    backgroundColor?: string;
    propsOnLayout?: (e: LayoutChangeEvent) => void;
}
interface ShadowPropertiesResult {
    flatStyle?: ViewStyle;
    bgColor: string;
    shadowProps: ReturnType<typeof computeShadowProperties>;
    isLinear: boolean;
    layout: {
        width: number;
        height: number;
    };
    canRenderCanvas: boolean;
    onLayout: (e: LayoutChangeEvent) => void;
}
export declare const useShadowProperties: ({ propWidth, propHeight, style, backgroundColor, shadowOffset, shadowColor, shadowBlur, reflectedLightOffset, reflectedLightColor, reflectedLightBlur, propsOnLayout, ...props }: UseShadowPropertiesParams | (UseShadowPropertiesParams & GradientLinearProps)) => ShadowPropertiesResult;
export {};
//# sourceMappingURL=useShadowProperties.d.ts.map